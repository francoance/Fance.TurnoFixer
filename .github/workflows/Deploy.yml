name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # Install .NET Core
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        source-url: https://api.nuget.org/v3/index.json
        dotnet-version: 5.0.302
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    # Install dependencies
    - name: Install dependencies
      run: dotnet restore
    # Build the project
    - name: Build 
      run: dotnet build ./Fance.TurnoFixer.sln --configuration Release
    - name: 'Write Config & Key Files'
      run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
        echo "pass_phrase=${{secrets.OCI_PASSPHRASE}}" >> ~/.oci/config
        echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
        echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
        echo "key_file=~/.oci/key.pem" >> ~/.oci/config
        echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
    - name: 'Install OCI CLI'
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults
        echo "/home/runner/bin" >> $GITHUB_PATH
        exec -l $SHELL
    - name: 'Fix Config File Permissions'
      run: |
        oci setup repair-file-permissions --file /home/runner/.oci/config
        oci setup repair-file-permissions --file /home/runner/.oci/key.pem
    - name: 'Check Existing Instance'
      run: |
        echo "INSTANCE_OCID=$( \
          oci compute instance list \
          --lifecycle-state RUNNING \
          --compartment-id ${{secrets.VM_COMPARTMENT_OCID}} \
          --display-name vm-turno-fixer \
          --query "data [0].id" \
          --raw-output \
        )" >> $GITHUB_ENV
    - name: 'Get Instance IP'
      run: |
        echo "INSTANCE_IP=$( \
          oci compute instance list-vnics \
          --instance-id ${{env.INSTANCE_OCID}} \
          --query 'data [0]."public-ip"' \
          --raw-output \
        )" >> $GITHUB_ENV
    - name: 'Wait for SSH'
      run: |
        while ! nc -w5 -z ${{ env.INSTANCE_IP }} 22; do
                sleep 5
                echo "SSH not available..."
        done; echo "SSH ready!"
    - name: 'Stop App'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.INSTANCE_IP }}
        username: ubuntu
        key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        script: |
          pid=`ps aux | grep "[F]ance.TurnoFixer.dll" | awk '{print $2}'`
          if [ "$pid" == "" ]; then
            echo "Process not found"
          else
            kill -9 $pid
          fi
          mkdir -p ~/turnofixer
    - name: 'Push files'
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.INSTANCE_IP }}
        username: ubuntu
        key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        source: "./Fance.TurnoFixer/bin/Release/net5.0/*"
        target: "~/turnofixer"
        strip_components: 2
    - name: 'Start App'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.INSTANCE_IP }}
        username: ubuntu
        key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        script: |
          dotnet ~/turnofixer/Fance.TurnoFixer.dll &
